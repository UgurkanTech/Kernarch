#ifndef KERNEL_H
#define KERNEL_H

#include "types.h"
#include "terminal.h"
#include "isr.h"
#include "pic.h"
#include "memory.h"
#include "io.h"
#include "idt.h"
#include "paging.h"
#include "keyboard.h"
#include "multiboot.h"
#include "interrupts.h"
#include "thread.h"

//Dummy sleep to slow down the initialization process
void dummy_sleep(int mul){
    int a = 1000000 * mul;
    for (int i = 0; i < a; i++)
        asm volatile ("nop");
    return;
}

void terminalProcess(){
    while (true) {
        char c = sys_read();
        if (c != '\0')
            term_input(c);
        thread_sleep(10);
    }
}

void terminalProcess();
void testThread(const char* name);

const char ascii_bytes[] = 
{
	0x26, 0x33, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x20, 0x20, 0x20, 0x0A,
	0x26, 0x39, 0x20, 0x2F, 0x5C, 0x20, 0x5C, 0x2F, 0x20, 0x2F, 0x20, 0x2F, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5C, 0x2F, 0x5C, 0x20, 0x20, 0x3D, 0x3D, 0x20, 0x5C, 0x2F, 0x5C, 0x20, 0x22, 0x2D, 0x2E, 0x5C, 0x20, 0x5C, 0x2F, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x5C, 0x2F, 0x5C, 0x20, 0x20, 0x3D, 0x3D, 0x20, 0x5C, 0x2F, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x5F, 0x5C, 0x2F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x20, 0x0A,
	0x26, 0x65, 0x20, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x22, 0x2D, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x5C, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x3C, 0x5C, 0x20, 0x5C, 0x20, 0x5C, 0x2D, 0x2E, 0x20, 0x20, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x3C, 0x5C, 0x20, 0x5C, 0x20, 0x5C, 0x5F, 0x5F, 0x5F, 0x5C, 0x20, 0x5C, 0x20, 0x20, 0x5F, 0x5F, 0x20, 0x5C, 0x20, 0x20, 0x0A,
	0x26, 0x66, 0x20, 0x20, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x5C, 0x22, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x5C, 0x5F, 0x5C, 0x20, 0x0A,
	0x26, 0x63, 0x20, 0x20, 0x20, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x20, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x20, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x20, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x5C, 0x2F, 0x5F, 0x2F, 0x20, 0x0A,
    0x0A
};

#endif // KERNEL_H